s
n
n
n
n
n
n
s
s
p sema
p tmp
q
debugpintos 
i
i b
disable 1 2 3
c
enable 1 2 3
n
n
n
c
bt
call running_thread ()
call running_thread ().name
p tmp
l
q
q
debugpintos 
b cond_signal
c
b ../../threads/synch.c:72
b ../../threads/synch.c:78
c
p tmp 
p *tmp
p/x tmp
p sema
p *sema
c
p *sema
n
n
n
n
bt
n
n
n
bt
p *sema
n
n
n
n
n
n
n
n
n
n
n
p *sema
n
bt
n
n
c
n
bt
v
c
bt
c
bt
s
bt
p *sema
c
disable 
i b
c
q
debugpintos 
b cond_signal 
c
l
l 62
b barrier
b 73
b 78
c
p tmp
p *tmp
q
debugpintos
b msg
c
c
c
call running_thread()
call running_thread().name
c
c
call running_thread().name
l
i locals 
n
n
b cond_wait 
c
n
p waiter
n
p waiter
n
n
p &waiter.semaphore 
p waiter.semaphore 
s
p sema
p *sema
n
n
n
p sema
p *sema
n
n
p *sema
p sema
b cond_signal
i b
disable 1 2
c
l
n
n
n
n
n
n
n
p target_sema
p &target_sema
p target
p t
q
debugpintos 
b cond_wait
b cond_signal 
c
n
n
n
n
n
n
c
c
c
c
q
debugpintos 
i b
c
c
c
call running_thread().name
c
call running_thread().name
n
n
n
n
n
n
p waiter
p waiter.elem.prev
p *waiter.elem.prev
p *waiter.elem.next
p lock
p *lock
p &watier.elem.prev
p &waiter.elem.prev
q
q
debugpintos 
b cond_wait
b cond_signal 
c
c
c
c
call running_thread ().name
p cond
p *cond
n
n
n
n
n
n
p waiter
p &waiter.semaphore.waiters.head.next
p waiter.semaphore.waiters.head
p waiter.semaphore.waiters.head.next
p *waiter.semaphore.waiters.head.next
p waiter.semaphore
p &waiter.semaphoe
p &waiter.semaphore
n
p cond.waiters
p waiter
p waiter.elem
p waiter.elem.prev
p *waiter.elem.prev
p *waiter.elem
p waiter.elem
p waiter.semaphore
p &waiter.semaphore
p waiter
n
p waiter
p waiter.semaphore
p &waiter.semaphore
i b
disable 1
c
n
n
n
n
n
n
n
p targeet
p target
p *target
call list_entry(target, struct semaphore_elem, elem)
n
p target_sema
p &target_sema
p target_sema
p *0xc010702c
p 0xc010702c
p taret_sema.waiters.next
p target_sema.waiters.next
p target_sema.waiters.head.next
n
p t
p t
p t
p t
q
